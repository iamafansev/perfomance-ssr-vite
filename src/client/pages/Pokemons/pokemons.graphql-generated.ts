/* eslint-disable */
// WARNING: This file was automatically generated by graphql-code-generator and should not be edited.
import * as Types from '../../shared/types/graphql';

import gql from 'graphql-tag';
import * as Urql from 'urql';
export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
export type PokemonsQueryVariables = Types.Exact<{ [key: string]: never }>;

export type PokemonsQuery = {
  __typename?: 'Query';
  pokemons?: Array<{
    __typename?: 'Pokemon';
    id: string;
    name: string;
  } | null> | null;
};

export const PokemonsDocument = gql`
  query Pokemons {
    pokemons(limit: 10) {
      id
      name
    }
  }
`;

export function usePokemonsQuery(
  options?: Omit<Urql.UseQueryArgs<PokemonsQueryVariables>, 'query'>
) {
  return Urql.useQuery<PokemonsQuery, PokemonsQueryVariables>({
    query: PokemonsDocument,
    ...options,
  });
}
